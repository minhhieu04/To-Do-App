<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo App</title>
    <link rel="stylesheet" href="/css/dashboard.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

</head>

<body>
    <header>
        <div class="headerContainer">
            <span>Welcome, <%= userName %>!</span>
            <button id="addTaskButton">Add Task</button>
            <button id="logoutButton">Logout</button>
        </div>
    </header>

    <!-- Modal add task form -->
    <div id="addTaskModal" class="formModal">
        <div class="modalContent">
            <span class="close" id="closeAddTask">&times;</span>
            <h2>Add Task</h2>
            <!-- Form to add task -->
            <form id="addTaskForm">
                <label for="title">Title:</label>
                <input type="text" id="title" name="title" required><br><br>
                <label for="description">Description:</label>
                <textarea id="description" name="description" rows="1" cols="50" required></textarea><br><br>
                <label for="dueDate">Due Date:</label>
                <input type="datetime-local" id="dueDate" name="dueDate" required><br><br>
                <label for="status">Status:</label>
                <select id="status" name="statusId" required>
                    <option value="1">To Do</option>
                    <option value="2">In Progress</option>
                    <option value="3">Completed</option>
                    <option value="4">Closed</option>
                </select><br><br>
                <label for="priority">Priority:</label>
                <select id="priority" name="priorityId" required>
                    <option value="1">Low</option>
                    <option value="2">Medium</option>
                    <option value="3">High</option>
                </select><br><br>
                <button type="submit">Add</button>
            </form>
        </div>
    </div>
    <!-- Modal edit task -->
    <div id="editTaskModal" class="formModal">
        <div class="modalContent">
            <span class="close" id="closeEditTask">&times;</span>
            <h2>Edit Task</h2>
            <!-- Form edit a task -->
            <form id="editTaskForm">
                <label for="editTitle">Title:</label>
                <input type="text" id="editTitle" name="editTitle" required><br><br>
                <label for="editDescription">Description:</label>
                <textarea id="editDescription" name="editDescription" rows="1" cols="50" required></textarea><br><br>
                <label for="editDueDate">Due Date:</label>
                <input type="datetime-local" id="editDueDate" name="editDueDate" required><br><br>
                <label for="editStatus">Status:</label>
                <select id="editStatus" name="editStatusId" required>
                    <option value="1">To Do</option>
                    <option value="2">In Progress</option>
                    <option value="3">Completed</option>
                    <option value="4">Closed</option>
                </select><br><br>
                <label for="editPriority">Priority:</label>
                <select id="editPriority" name="editPriorityId" required>
                    <option value="1">Low</option>
                    <option value="2">Medium</option>
                    <option value="3">High</option>
                </select><br><br>
                <button type="submit">Save</button>
            </form>
        </div>
    </div>


    <main>
        <div class="bodyContainer">
            <div id="taskList">
                <% if (tasks.length===0) { %>
                    <!-- Kiểm tra nếu danh sách task rỗng -->
                    <p id="noTaskMessage">Chưa có ghi chú nào!</p>
                    <% } else { %>
                        <div class="headerBody">
                            <div class="dropdown">
                                <a class="btn btn-secondary dropdown-toggle title" href="#" role="button"
                                    id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                                    Title
                                </a>

                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <li><a class="dropdown-item" href="#">A-Z</a></li>
                                    <li><a class="dropdown-item" href="#">Z-A</a></li>
                                </ul>
                            </div>
                            <div class="dropdown">
                                <a class="btn btn-secondary dropdown-toggle description" href="#" role="button"
                                    id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                                    Description
                                </a>

                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <li><a class="dropdown-item" href="#">A-Z</a></li>
                                    <li><a class="dropdown-item" href="#">Z-A</a></li>
                                </ul>
                            </div>
                            <div class="dropdown">
                                <a class="btn btn-secondary dropdown-toggle dueDate" href="#" role="button"
                                    id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                                    Due Date
                                </a>

                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <li><a class="dropdown-item" href="#">Newest</a></li>
                                    <li><a class="dropdown-item" href="#">Oldest</a></li>
                                </ul>
                            </div>
                            <div class="dropdown">
                                <a class="btn btn-secondary dropdown-toggle status" href="#" role="button"
                                    id="statusDropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                                    Status
                                </a>

                                <ul class="dropdown-menu" aria-labelledby="statusDropdownMenuLink">
                                    <li><a class="dropdown-item" href="#" data-value="1">Todo</a></li>
                                    <li><a class="dropdown-item" href="#" data-value="2">In Progress</a></li>
                                    <li><a class="dropdown-item" href="#" data-value="3">Completed</a></li>
                                    <li><a class="dropdown-item" href="#" data-value="4">Closed</a></li>
                                </ul>
                            </div>

                            <!-- Priority dropdown -->
                            <div class="dropdown">
                                <a class="btn btn-secondary dropdown-toggle priority" href="#" role="button"
                                    id="priorityDropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                                    Priority
                                </a>

                                <ul class="dropdown-menu" aria-labelledby="priorityDropdownMenuLink">
                                    <li><a class="dropdown-item" href="#" data-value="1">Low</a></li>
                                    <li><a class="dropdown-item" href="#" data-value="2">Medium</a></li>
                                    <li><a class="dropdown-item" href="#" data-value="3">High</a></li>
                                </ul>
                            </div>
                            <div class="action">Action</div>
                        </div>
                        <% tasks.forEach(task=> { %>
                            <div class="task">
                                <div class="title">
                                    <%= task.title %>
                                </div>
                                <div class="description">
                                    <%= task.description %>
                                </div>
                                <div class="dueDate">
                                    <%= task.dueDate.toLocaleString() %>
                                </div>
                                <div class="status">
                                    <%= task.status.name %>
                                </div>
                                <div class="priority">
                                    <%= task.priority.name %>
                                </div>
                                <div class="edit">
                                    <button class="editButton" data-task-id="<%= task.taskId %>"
                                        data-priority-id="<%= task.priorityId %>"
                                        data-status-id="<%= task.statusId %>">Edit</button>
                                    <i class="fa-regular fa-pen-to-square"></i>
                                    <button class="deleteButton" data-task-id="<%= task.taskId %>">X</button>
                                </div>
                            </div>
                            <% }); %>
                                <% } %>
            </div>

        </div>
        <div class="pagination-container">
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                        <a class="page-link" href="?page=1" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    <% for (let i=1; i <=totalPages; i++) { %>
                        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>">
                                <%= i %>
                            </a>
                        </li>
                        <% } %>
                            <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                                <a class="page-link" href="?page=<%= totalPages %>" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                </ul>
            </nav>
        </div>

    </main>


    <script src=" https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>

        const addTaskModal = document.getElementById('addTaskModal');
        const editTaskModal = document.getElementById('editTaskModal');
        const addTaskBtn = document.getElementById("addTaskButton");
        const closeAddTaskBtn = document.getElementById("closeAddTask");
        const closeEditTaskBtn = document.getElementById("closeEditTask");

        addTaskBtn.onclick = function () {
            addTaskModal.style.display = "block";
        }

        closeAddTaskBtn.onclick = function () {
            addTaskModal.style.display = "none";
        }

        closeEditTaskBtn.onclick = function () {
            editTaskModal.style.display = "none";
        }

        window.onclick = function (event) {
            if (event.target == addTaskModal) {
                addTaskModal.style.display = "none";
            }
            if (event.target == editTaskModal) {
                editTaskModal.style.display = "none";
            }
        }

        document.getElementById('addTaskForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Ngăn chặn submit mặc định

            // Lấy giá trị của các trường input
            const title = document.getElementById("title").value;
            const description = document.getElementById("description").value;
            const dueDate = document.getElementById("dueDate").value;
            const statusId = document.getElementById("status").value;
            const priorityId = document.getElementById("priority").value;
            const taskData = { title, description, dueDate, statusId, priorityId }

            axios.post('/tasks/add-task', taskData)
                .then(function (response) {
                    alert('Task added successfully')

                    // Đóng modal sau khi thêm task thành công
                    addTaskModal.style.display = "none";
                    // Refresh trang
                    window.location.reload();
                })
                .catch(function (error) {
                    console.error('Error:', error);
                });
        });

        document.getElementById('logoutButton').addEventListener('click', function () {
            axios.post('/auth/logout')
                .then(function (response) {
                    // Redirect to login page
                    window.location.href = '/auth/login';
                })
                .catch(function (error) {
                    console.error('Error:', error);
                });
        });

        // Lắng nghe sự kiện click vào button edit của mỗi task
        document.querySelectorAll('.editButton').forEach(function (editBtn) {
            editBtn.addEventListener('click', function () {

                function formatDateTimeForInput(dateTime) {
                    const isoDateTime = dateTime.toISOString(); // Chuyển đổi sang định dạng ISO 8601 (UTC)
                    const localDateTime = new Date(dateTime.getTime() - (dateTime.getTimezoneOffset() * 60000)); // Chuyển múi giờ về cục bộ
                    return localDateTime.toISOString().slice(0, 16); // Trả về định dạng ISO 8601 cục bộ (không bao gồm giây) // Cắt bớt phần thừa
                }
                // Lấy thông tin của task từ các phần tử HTML tương ứng
                const taskElement = this.closest('.task');
                const taskId = this.dataset.taskId;
                const title = taskElement.querySelector('.title').innerText;
                const description = taskElement.querySelector('.description').innerText;
                const date = new Date(taskElement.querySelector('.dueDate').innerText);
                const dueDate = formatDateTimeForInput(date)
                const statusId = this.dataset.statusId;
                const priorityId = this.dataset.priorityId;

                // Hiển thị modal chỉnh sửa task với thông tin của task được chọn
                displayEditModal(taskId, title, description, dueDate, statusId, priorityId);
            });
        });


        // Hàm hiển thị modal chỉnh sửa task
        function displayEditModal(taskId, title, description, dueDate, status, priority) {
            // Hiển thị modal chỉnh sửa
            editTaskModal.style.display = 'block';

            // Gán giá trị taskId vào dataset của form
            document.getElementById('editTaskForm').dataset.taskId = taskId;

            // Đổ dữ liệu của task vào các trường input trong form chỉnh sửa
            document.getElementById('editTitle').value = title;
            document.getElementById('editDescription').value = description;
            document.getElementById('editDueDate').value = dueDate;
            document.getElementById('editStatus').value = status;
            document.getElementById('editPriority').value = priority;
        }

        // Lắng nghe sự kiện submit của form chỉnh sửa task
        document.getElementById('editTaskForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Ngăn chặn submit mặc định của form

            const taskId = this.dataset.taskId;
            const title = document.getElementById('editTitle').value;
            const description = document.getElementById('editDescription').value;
            const dueDate = document.getElementById('editDueDate').value;
            const statusId = document.getElementById('editStatus').value;
            const priorityId = document.getElementById('editPriority').value;

            const taskData = { taskId, title, description, dueDate, statusId, priorityId }

            //  Cập nhật thông tin task
            axios.put('/tasks/' + taskId, {
                title,
                description,
                dueDate,
                statusId,
                priorityId
            })
                .then(function (response) {
                    // Đóng modal chỉnh sửa task sau khi cập nhật thành công
                    const editModal = document.getElementById('editTaskModal');
                    editModal.style.display = 'none';
                    alert('Updated task')
                    // Refresh trang để hiển thị thông tin task đã được cập nhật
                    window.location.reload();
                })
                .catch(function (error) {
                    console.error('Error:', error);
                });
        });

        document.querySelectorAll('.deleteButton').forEach(deleteBtn => {
            deleteBtn.addEventListener('click', function () {
                const taskId = this.dataset.taskId;
                axios.delete(`/tasks/${taskId}`)
                    .then(function (response) {
                        alert('Task deleted successfully')
                        window.location.reload();
                    })
                    .catch(function (error) {
                        console.error('Error:', error);
                    })
            })
        });

        document.addEventListener('DOMContentLoaded', function () {
            const dropdowns = document.querySelectorAll('.dropdown-menu');

            dropdowns.forEach(dropdown => {
                dropdown.addEventListener('click', function (event) {
                    event.preventDefault();
                    const selectedItem = event.target.textContent;
                    const columnName = this.closest('.dropdown').querySelector('.dropdown-toggle').textContent.trim().toLowerCase();

                    // Gửi request đến server với các thông tin filter và sort đã chọn
                    const queryParams = new URLSearchParams(window.location.search);
                    queryParams.set('sortColumn', columnName);
                    queryParams.s
                    // queryParams.set('sortOrder', selectedItem === 'A-Z' || selectedItem === 'Newest' ? 'ASC' : 'DESC');

                    window.location.href = `${window.location.pathname}?${queryParams.toString()}`;
                });
            });
        });



    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossorigin="anonymous"></script>


</body>

</html>